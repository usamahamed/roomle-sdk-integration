define(["exports"],(function(e){let t=0;e.NO_CONVERSATION_ID=-1,e.WorkerToMainThread=class extends class{get eventPoster(){return this._eventPoster&&this._eventPoster.postMessage?this._eventPoster:this.eventListener&&this.eventListener.postMessage?this.eventListener:{postMessage:()=>{}}}hasEventPoster(){return!!this._eventPoster}constructor(e,t){this._callbacks=e,this.eventListener=t,this.eventListener.addEventListener("message",this,!1)}nextConversationId(){return t++}setEventPoster(e){this._eventPoster=e}handleEvent(e){if(!e||!e.data)return;const[t,s,n]=JSON.parse(e.data);if(!t||0!==t.indexOf("rml"))return;const[r,o]=t.split("."),i=parseInt(o,10);this._callbacks.onCommand(i,parseInt(s,10),n)}}{constructor(e,t){super(e,t||self)}sendToMainThread(e,t,s){const n=JSON.stringify(["rml."+e,t,s]);!this.hasEventPoster()&&self.ServiceWorkerGlobalScope&&this.eventListener instanceof self.ServiceWorkerGlobalScope?clients.matchAll({includeUncontrolled:!0}).then(e=>{e.forEach(e=>e.postMessage(n))},e=>console.error(e)):this.eventPoster.postMessage(n)}}}));